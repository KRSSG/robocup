// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Replacement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grSim_Replacement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class grSim_RobotReplacementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<grSim_RobotReplacement> {};
grSim_RobotReplacementDefaultTypeInternal _grSim_RobotReplacement_default_instance_;
class grSim_BallReplacementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<grSim_BallReplacement> {};
grSim_BallReplacementDefaultTypeInternal _grSim_BallReplacement_default_instance_;
class grSim_ReplacementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<grSim_Replacement> {};
grSim_ReplacementDefaultTypeInternal _grSim_Replacement_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_grSim_5fReplacement_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_grSim_5fReplacement_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, _has_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, yellowteam_),
    0,
    1,
    2,
    3,
    4,
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, _has_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, vy_),
    0,
    1,
    2,
    3,
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, _has_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, ball_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, robots_),
    0,
    1,
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(grSim_RobotReplacement)},
  { 14, 22, sizeof(grSim_BallReplacement)},
  { 26, 32, sizeof(grSim_Replacement)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_grSim_RobotReplacement_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_grSim_BallReplacement_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_grSim_Replacement_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_grSim_5fReplacement_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "grSim_Replacement.proto", schemas, file_default_instances, protobuf_Offsets_grSim_5fReplacement_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void protobuf_ShutdownFile_grSim_5fReplacement_2eproto() {
  _grSim_RobotReplacement_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _grSim_BallReplacement_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _grSim_Replacement_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void protobuf_InitDefaults_grSim_5fReplacement_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _grSim_RobotReplacement_default_instance_.DefaultConstruct();
  _grSim_BallReplacement_default_instance_.DefaultConstruct();
  _grSim_Replacement_default_instance_.DefaultConstruct();
  _grSim_Replacement_default_instance_.get_mutable()->ball_ = const_cast< ::grSim_BallReplacement*>(
      ::grSim_BallReplacement::internal_default_instance());
}

void protobuf_InitDefaults_grSim_5fReplacement_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_grSim_5fReplacement_2eproto_impl);
}
void protobuf_AddDesc_grSim_5fReplacement_2eproto_impl() {
  protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  static const char descriptor[] = {
      "\n\027grSim_Replacement.proto\"[\n\026grSim_Robot"
      "Replacement\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\013\n\003dir"
      "\030\003 \002(\001\022\n\n\002id\030\004 \002(\r\022\022\n\nyellowteam\030\005 \002(\010\"E"
      "\n\025grSim_BallReplacement\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030"
      "\002 \002(\001\022\n\n\002vx\030\003 \002(\001\022\n\n\002vy\030\004 \002(\001\"b\n\021grSim_R"
      "eplacement\022$\n\004ball\030\001 \001(\0132\026.grSim_BallRep"
      "lacement\022\'\n\006robots\030\002 \003(\0132\027.grSim_RobotRe"
      "placement"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grSim_Replacement.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grSim_5fReplacement_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_grSim_5fReplacement_2eproto_once_);
void protobuf_AddDesc_grSim_5fReplacement_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_grSim_5fReplacement_2eproto_once_,
                 &protobuf_AddDesc_grSim_5fReplacement_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grSim_5fReplacement_2eproto {
  StaticDescriptorInitializer_grSim_5fReplacement_2eproto() {
    protobuf_AddDesc_grSim_5fReplacement_2eproto();
  }
} static_descriptor_initializer_grSim_5fReplacement_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int grSim_RobotReplacement::kXFieldNumber;
const int grSim_RobotReplacement::kYFieldNumber;
const int grSim_RobotReplacement::kDirFieldNumber;
const int grSim_RobotReplacement::kIdFieldNumber;
const int grSim_RobotReplacement::kYellowteamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

grSim_RobotReplacement::grSim_RobotReplacement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_RobotReplacement)
}
grSim_RobotReplacement::grSim_RobotReplacement(const grSim_RobotReplacement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&yellowteam_) -
    reinterpret_cast<char*>(&x_) + sizeof(yellowteam_));
  // @@protoc_insertion_point(copy_constructor:grSim_RobotReplacement)
}

void grSim_RobotReplacement::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&yellowteam_) -
    reinterpret_cast<char*>(&x_) + sizeof(yellowteam_));
}

grSim_RobotReplacement::~grSim_RobotReplacement() {
  // @@protoc_insertion_point(destructor:grSim_RobotReplacement)
  SharedDtor();
}

void grSim_RobotReplacement::SharedDtor() {
}

void grSim_RobotReplacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_RobotReplacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const grSim_RobotReplacement& grSim_RobotReplacement::default_instance() {
  protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  return *internal_default_instance();
}

grSim_RobotReplacement* grSim_RobotReplacement::New(::google::protobuf::Arena* arena) const {
  grSim_RobotReplacement* n = new grSim_RobotReplacement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void grSim_RobotReplacement::Clear() {
// @@protoc_insertion_point(message_clear_start:grSim_RobotReplacement)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&yellowteam_) -
      reinterpret_cast<char*>(&x_) + sizeof(yellowteam_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool grSim_RobotReplacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_RobotReplacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double dir = 3;
      case 3: {
        if (tag == 25u) {
          set_has_dir();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 id = 4;
      case 4: {
        if (tag == 32u) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool yellowteam = 5;
      case 5: {
        if (tag == 40u) {
          set_has_yellowteam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yellowteam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_RobotReplacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_RobotReplacement)
  return false;
#undef DO_
}

void grSim_RobotReplacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_RobotReplacement)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dir(), output);
  }

  // required uint32 id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->id(), output);
  }

  // required bool yellowteam = 5;
  if (has_yellowteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->yellowteam(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_RobotReplacement)
}

::google::protobuf::uint8* grSim_RobotReplacement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grSim_RobotReplacement)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dir(), target);
  }

  // required uint32 id = 4;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->id(), target);
  }

  // required bool yellowteam = 5;
  if (has_yellowteam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->yellowteam(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_RobotReplacement)
  return target;
}

size_t grSim_RobotReplacement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:grSim_RobotReplacement)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  if (has_dir()) {
    // required double dir = 3;
    total_size += 1 + 8;
  }

  if (has_id()) {
    // required uint32 id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_yellowteam()) {
    // required bool yellowteam = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t grSim_RobotReplacement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grSim_RobotReplacement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

    // required double dir = 3;
    total_size += 1 + 8;

    // required uint32 id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required bool yellowteam = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_RobotReplacement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grSim_RobotReplacement)
  GOOGLE_DCHECK_NE(&from, this);
  const grSim_RobotReplacement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const grSim_RobotReplacement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grSim_RobotReplacement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grSim_RobotReplacement)
    MergeFrom(*source);
  }
}

void grSim_RobotReplacement::MergeFrom(const grSim_RobotReplacement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grSim_RobotReplacement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_yellowteam()) {
      set_yellowteam(from.yellowteam());
    }
  }
}

void grSim_RobotReplacement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grSim_RobotReplacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_RobotReplacement::CopyFrom(const grSim_RobotReplacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grSim_RobotReplacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_RobotReplacement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void grSim_RobotReplacement::Swap(grSim_RobotReplacement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void grSim_RobotReplacement::InternalSwap(grSim_RobotReplacement* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(dir_, other->dir_);
  std::swap(id_, other->id_);
  std::swap(yellowteam_, other->yellowteam_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata grSim_RobotReplacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// grSim_RobotReplacement

// required double x = 1;
bool grSim_RobotReplacement::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void grSim_RobotReplacement::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void grSim_RobotReplacement::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void grSim_RobotReplacement::clear_x() {
  x_ = 0;
  clear_has_x();
}
double grSim_RobotReplacement::x() const {
  // @@protoc_insertion_point(field_get:grSim_RobotReplacement.x)
  return x_;
}
void grSim_RobotReplacement::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:grSim_RobotReplacement.x)
}

// required double y = 2;
bool grSim_RobotReplacement::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void grSim_RobotReplacement::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void grSim_RobotReplacement::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void grSim_RobotReplacement::clear_y() {
  y_ = 0;
  clear_has_y();
}
double grSim_RobotReplacement::y() const {
  // @@protoc_insertion_point(field_get:grSim_RobotReplacement.y)
  return y_;
}
void grSim_RobotReplacement::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:grSim_RobotReplacement.y)
}

// required double dir = 3;
bool grSim_RobotReplacement::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void grSim_RobotReplacement::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
void grSim_RobotReplacement::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
void grSim_RobotReplacement::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
double grSim_RobotReplacement::dir() const {
  // @@protoc_insertion_point(field_get:grSim_RobotReplacement.dir)
  return dir_;
}
void grSim_RobotReplacement::set_dir(double value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:grSim_RobotReplacement.dir)
}

// required uint32 id = 4;
bool grSim_RobotReplacement::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void grSim_RobotReplacement::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void grSim_RobotReplacement::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void grSim_RobotReplacement::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 grSim_RobotReplacement::id() const {
  // @@protoc_insertion_point(field_get:grSim_RobotReplacement.id)
  return id_;
}
void grSim_RobotReplacement::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:grSim_RobotReplacement.id)
}

// required bool yellowteam = 5;
bool grSim_RobotReplacement::has_yellowteam() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void grSim_RobotReplacement::set_has_yellowteam() {
  _has_bits_[0] |= 0x00000010u;
}
void grSim_RobotReplacement::clear_has_yellowteam() {
  _has_bits_[0] &= ~0x00000010u;
}
void grSim_RobotReplacement::clear_yellowteam() {
  yellowteam_ = false;
  clear_has_yellowteam();
}
bool grSim_RobotReplacement::yellowteam() const {
  // @@protoc_insertion_point(field_get:grSim_RobotReplacement.yellowteam)
  return yellowteam_;
}
void grSim_RobotReplacement::set_yellowteam(bool value) {
  set_has_yellowteam();
  yellowteam_ = value;
  // @@protoc_insertion_point(field_set:grSim_RobotReplacement.yellowteam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int grSim_BallReplacement::kXFieldNumber;
const int grSim_BallReplacement::kYFieldNumber;
const int grSim_BallReplacement::kVxFieldNumber;
const int grSim_BallReplacement::kVyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

grSim_BallReplacement::grSim_BallReplacement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_BallReplacement)
}
grSim_BallReplacement::grSim_BallReplacement(const grSim_BallReplacement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&vy_) -
    reinterpret_cast<char*>(&x_) + sizeof(vy_));
  // @@protoc_insertion_point(copy_constructor:grSim_BallReplacement)
}

void grSim_BallReplacement::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&vy_) -
    reinterpret_cast<char*>(&x_) + sizeof(vy_));
}

grSim_BallReplacement::~grSim_BallReplacement() {
  // @@protoc_insertion_point(destructor:grSim_BallReplacement)
  SharedDtor();
}

void grSim_BallReplacement::SharedDtor() {
}

void grSim_BallReplacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_BallReplacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const grSim_BallReplacement& grSim_BallReplacement::default_instance() {
  protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  return *internal_default_instance();
}

grSim_BallReplacement* grSim_BallReplacement::New(::google::protobuf::Arena* arena) const {
  grSim_BallReplacement* n = new grSim_BallReplacement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void grSim_BallReplacement::Clear() {
// @@protoc_insertion_point(message_clear_start:grSim_BallReplacement)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&vy_) -
      reinterpret_cast<char*>(&x_) + sizeof(vy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool grSim_BallReplacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_BallReplacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vx = 3;
      case 3: {
        if (tag == 25u) {
          set_has_vx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vy = 4;
      case 4: {
        if (tag == 33u) {
          set_has_vy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_BallReplacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_BallReplacement)
  return false;
#undef DO_
}

void grSim_BallReplacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_BallReplacement)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double vx = 3;
  if (has_vx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vx(), output);
  }

  // required double vy = 4;
  if (has_vy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_BallReplacement)
}

::google::protobuf::uint8* grSim_BallReplacement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grSim_BallReplacement)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double vx = 3;
  if (has_vx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->vx(), target);
  }

  // required double vy = 4;
  if (has_vy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_BallReplacement)
  return target;
}

size_t grSim_BallReplacement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:grSim_BallReplacement)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  if (has_vx()) {
    // required double vx = 3;
    total_size += 1 + 8;
  }

  if (has_vy()) {
    // required double vy = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t grSim_BallReplacement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grSim_BallReplacement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

    // required double vx = 3;
    total_size += 1 + 8;

    // required double vy = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_BallReplacement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grSim_BallReplacement)
  GOOGLE_DCHECK_NE(&from, this);
  const grSim_BallReplacement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const grSim_BallReplacement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grSim_BallReplacement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grSim_BallReplacement)
    MergeFrom(*source);
  }
}

void grSim_BallReplacement::MergeFrom(const grSim_BallReplacement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grSim_BallReplacement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_vx()) {
      set_vx(from.vx());
    }
    if (from.has_vy()) {
      set_vy(from.vy());
    }
  }
}

void grSim_BallReplacement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grSim_BallReplacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_BallReplacement::CopyFrom(const grSim_BallReplacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grSim_BallReplacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_BallReplacement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void grSim_BallReplacement::Swap(grSim_BallReplacement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void grSim_BallReplacement::InternalSwap(grSim_BallReplacement* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata grSim_BallReplacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// grSim_BallReplacement

// required double x = 1;
bool grSim_BallReplacement::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void grSim_BallReplacement::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void grSim_BallReplacement::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void grSim_BallReplacement::clear_x() {
  x_ = 0;
  clear_has_x();
}
double grSim_BallReplacement::x() const {
  // @@protoc_insertion_point(field_get:grSim_BallReplacement.x)
  return x_;
}
void grSim_BallReplacement::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:grSim_BallReplacement.x)
}

// required double y = 2;
bool grSim_BallReplacement::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void grSim_BallReplacement::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void grSim_BallReplacement::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void grSim_BallReplacement::clear_y() {
  y_ = 0;
  clear_has_y();
}
double grSim_BallReplacement::y() const {
  // @@protoc_insertion_point(field_get:grSim_BallReplacement.y)
  return y_;
}
void grSim_BallReplacement::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:grSim_BallReplacement.y)
}

// required double vx = 3;
bool grSim_BallReplacement::has_vx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void grSim_BallReplacement::set_has_vx() {
  _has_bits_[0] |= 0x00000004u;
}
void grSim_BallReplacement::clear_has_vx() {
  _has_bits_[0] &= ~0x00000004u;
}
void grSim_BallReplacement::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
double grSim_BallReplacement::vx() const {
  // @@protoc_insertion_point(field_get:grSim_BallReplacement.vx)
  return vx_;
}
void grSim_BallReplacement::set_vx(double value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:grSim_BallReplacement.vx)
}

// required double vy = 4;
bool grSim_BallReplacement::has_vy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void grSim_BallReplacement::set_has_vy() {
  _has_bits_[0] |= 0x00000008u;
}
void grSim_BallReplacement::clear_has_vy() {
  _has_bits_[0] &= ~0x00000008u;
}
void grSim_BallReplacement::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
double grSim_BallReplacement::vy() const {
  // @@protoc_insertion_point(field_get:grSim_BallReplacement.vy)
  return vy_;
}
void grSim_BallReplacement::set_vy(double value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:grSim_BallReplacement.vy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int grSim_Replacement::kBallFieldNumber;
const int grSim_Replacement::kRobotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

grSim_Replacement::grSim_Replacement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_Replacement)
}
grSim_Replacement::grSim_Replacement(const grSim_Replacement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ball()) {
    ball_ = new ::grSim_BallReplacement(*from.ball_);
  } else {
    ball_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grSim_Replacement)
}

void grSim_Replacement::SharedCtor() {
  _cached_size_ = 0;
  ball_ = NULL;
}

grSim_Replacement::~grSim_Replacement() {
  // @@protoc_insertion_point(destructor:grSim_Replacement)
  SharedDtor();
}

void grSim_Replacement::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ball_;
  }
}

void grSim_Replacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_Replacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const grSim_Replacement& grSim_Replacement::default_instance() {
  protobuf_InitDefaults_grSim_5fReplacement_2eproto();
  return *internal_default_instance();
}

grSim_Replacement* grSim_Replacement::New(::google::protobuf::Arena* arena) const {
  grSim_Replacement* n = new grSim_Replacement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void grSim_Replacement::Clear() {
// @@protoc_insertion_point(message_clear_start:grSim_Replacement)
  robots_.Clear();
  if (has_ball()) {
    GOOGLE_DCHECK(ball_ != NULL);
    ball_->::grSim_BallReplacement::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool grSim_Replacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_Replacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grSim_BallReplacement ball = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ball()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grSim_RobotReplacement robots = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_robots()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_Replacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_Replacement)
  return false;
#undef DO_
}

void grSim_Replacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_Replacement)
  // optional .grSim_BallReplacement ball = 1;
  if (has_ball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ball_, output);
  }

  // repeated .grSim_RobotReplacement robots = 2;
  for (unsigned int i = 0, n = this->robots_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->robots(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_Replacement)
}

::google::protobuf::uint8* grSim_Replacement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grSim_Replacement)
  // optional .grSim_BallReplacement ball = 1;
  if (has_ball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ball_, false, target);
  }

  // repeated .grSim_RobotReplacement robots = 2;
  for (unsigned int i = 0, n = this->robots_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->robots(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_Replacement)
  return target;
}

size_t grSim_Replacement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grSim_Replacement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .grSim_RobotReplacement robots = 2;
  {
    unsigned int count = this->robots_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->robots(i));
    }
  }

  // optional .grSim_BallReplacement ball = 1;
  if (has_ball()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ball_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_Replacement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grSim_Replacement)
  GOOGLE_DCHECK_NE(&from, this);
  const grSim_Replacement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const grSim_Replacement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grSim_Replacement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grSim_Replacement)
    MergeFrom(*source);
  }
}

void grSim_Replacement::MergeFrom(const grSim_Replacement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grSim_Replacement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robots_.MergeFrom(from.robots_);
  if (from.has_ball()) {
    mutable_ball()->::grSim_BallReplacement::MergeFrom(from.ball());
  }
}

void grSim_Replacement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grSim_Replacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_Replacement::CopyFrom(const grSim_Replacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grSim_Replacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_Replacement::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->robots())) return false;
  if (has_ball()) {
    if (!this->ball_->IsInitialized()) return false;
  }
  return true;
}

void grSim_Replacement::Swap(grSim_Replacement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void grSim_Replacement::InternalSwap(grSim_Replacement* other) {
  robots_.UnsafeArenaSwap(&other->robots_);
  std::swap(ball_, other->ball_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata grSim_Replacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// grSim_Replacement

// optional .grSim_BallReplacement ball = 1;
bool grSim_Replacement::has_ball() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void grSim_Replacement::set_has_ball() {
  _has_bits_[0] |= 0x00000001u;
}
void grSim_Replacement::clear_has_ball() {
  _has_bits_[0] &= ~0x00000001u;
}
void grSim_Replacement::clear_ball() {
  if (ball_ != NULL) ball_->::grSim_BallReplacement::Clear();
  clear_has_ball();
}
const ::grSim_BallReplacement& grSim_Replacement::ball() const {
  // @@protoc_insertion_point(field_get:grSim_Replacement.ball)
  return ball_ != NULL ? *ball_
                         : *::grSim_BallReplacement::internal_default_instance();
}
::grSim_BallReplacement* grSim_Replacement::mutable_ball() {
  set_has_ball();
  if (ball_ == NULL) {
    ball_ = new ::grSim_BallReplacement;
  }
  // @@protoc_insertion_point(field_mutable:grSim_Replacement.ball)
  return ball_;
}
::grSim_BallReplacement* grSim_Replacement::release_ball() {
  // @@protoc_insertion_point(field_release:grSim_Replacement.ball)
  clear_has_ball();
  ::grSim_BallReplacement* temp = ball_;
  ball_ = NULL;
  return temp;
}
void grSim_Replacement::set_allocated_ball(::grSim_BallReplacement* ball) {
  delete ball_;
  ball_ = ball;
  if (ball) {
    set_has_ball();
  } else {
    clear_has_ball();
  }
  // @@protoc_insertion_point(field_set_allocated:grSim_Replacement.ball)
}

// repeated .grSim_RobotReplacement robots = 2;
int grSim_Replacement::robots_size() const {
  return robots_.size();
}
void grSim_Replacement::clear_robots() {
  robots_.Clear();
}
const ::grSim_RobotReplacement& grSim_Replacement::robots(int index) const {
  // @@protoc_insertion_point(field_get:grSim_Replacement.robots)
  return robots_.Get(index);
}
::grSim_RobotReplacement* grSim_Replacement::mutable_robots(int index) {
  // @@protoc_insertion_point(field_mutable:grSim_Replacement.robots)
  return robots_.Mutable(index);
}
::grSim_RobotReplacement* grSim_Replacement::add_robots() {
  // @@protoc_insertion_point(field_add:grSim_Replacement.robots)
  return robots_.Add();
}
::google::protobuf::RepeatedPtrField< ::grSim_RobotReplacement >*
grSim_Replacement::mutable_robots() {
  // @@protoc_insertion_point(field_mutable_list:grSim_Replacement.robots)
  return &robots_;
}
const ::google::protobuf::RepeatedPtrField< ::grSim_RobotReplacement >&
grSim_Replacement::robots() const {
  // @@protoc_insertion_point(field_list:grSim_Replacement.robots)
  return robots_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
