// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sslDebug_Data.proto

#ifndef PROTOBUF_sslDebug_5fData_2eproto__INCLUDED
#define PROTOBUF_sslDebug_5fData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class Debug_AdjustBall;
class Debug_AdjustBallDefaultTypeInternal;
extern Debug_AdjustBallDefaultTypeInternal _Debug_AdjustBall_default_instance_;
class Debug_AdjustBot;
class Debug_AdjustBotDefaultTypeInternal;
extern Debug_AdjustBotDefaultTypeInternal _Debug_AdjustBot_default_instance_;
class Debug_Circle;
class Debug_CircleDefaultTypeInternal;
extern Debug_CircleDefaultTypeInternal _Debug_Circle_default_instance_;
class Debug_Line;
class Debug_LineDefaultTypeInternal;
extern Debug_LineDefaultTypeInternal _Debug_Line_default_instance_;
class sslDebug_Data;
class sslDebug_DataDefaultTypeInternal;
extern sslDebug_DataDefaultTypeInternal _sslDebug_Data_default_instance_;

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sslDebug_5fData_2eproto();
void protobuf_InitDefaults_sslDebug_5fData_2eproto();

// ===================================================================

class sslDebug_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sslDebug_Data) */ {
 public:
  sslDebug_Data();
  virtual ~sslDebug_Data();

  sslDebug_Data(const sslDebug_Data& from);

  inline sslDebug_Data& operator=(const sslDebug_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sslDebug_Data& default_instance();

  static inline const sslDebug_Data* internal_default_instance() {
    return reinterpret_cast<const sslDebug_Data*>(
               &_sslDebug_Data_default_instance_);
  }

  void Swap(sslDebug_Data* other);

  // implements Message ----------------------------------------------

  inline sslDebug_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  sslDebug_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sslDebug_Data& from);
  void MergeFrom(const sslDebug_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sslDebug_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // repeated .Debug_Circle circle = 2;
  int circle_size() const;
  void clear_circle();
  static const int kCircleFieldNumber = 2;
  const ::Debug_Circle& circle(int index) const;
  ::Debug_Circle* mutable_circle(int index);
  ::Debug_Circle* add_circle();
  ::google::protobuf::RepeatedPtrField< ::Debug_Circle >*
      mutable_circle();
  const ::google::protobuf::RepeatedPtrField< ::Debug_Circle >&
      circle() const;

  // repeated .Debug_Line line = 3;
  int line_size() const;
  void clear_line();
  static const int kLineFieldNumber = 3;
  const ::Debug_Line& line(int index) const;
  ::Debug_Line* mutable_line(int index);
  ::Debug_Line* add_line();
  ::google::protobuf::RepeatedPtrField< ::Debug_Line >*
      mutable_line();
  const ::google::protobuf::RepeatedPtrField< ::Debug_Line >&
      line() const;

  // repeated .Debug_AdjustBot botpos = 4;
  int botpos_size() const;
  void clear_botpos();
  static const int kBotposFieldNumber = 4;
  const ::Debug_AdjustBot& botpos(int index) const;
  ::Debug_AdjustBot* mutable_botpos(int index);
  ::Debug_AdjustBot* add_botpos();
  ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBot >*
      mutable_botpos();
  const ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBot >&
      botpos() const;

  // repeated .Debug_AdjustBall ballpos = 5;
  int ballpos_size() const;
  void clear_ballpos();
  static const int kBallposFieldNumber = 5;
  const ::Debug_AdjustBall& ballpos(int index) const;
  ::Debug_AdjustBall* mutable_ballpos(int index);
  ::Debug_AdjustBall* add_ballpos();
  ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBall >*
      mutable_ballpos();
  const ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBall >&
      ballpos() const;

  // @@protoc_insertion_point(class_scope:sslDebug_Data)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Debug_Circle > circle_;
  ::google::protobuf::RepeatedPtrField< ::Debug_Line > line_;
  ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBot > botpos_;
  ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBall > ballpos_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend void  protobuf_InitDefaults_sslDebug_5fData_2eproto_impl();
  friend void  protobuf_AddDesc_sslDebug_5fData_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_sslDebug_5fData_2eproto();
  friend void protobuf_ShutdownFile_sslDebug_5fData_2eproto();

};
// -------------------------------------------------------------------

class Debug_Circle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Debug_Circle) */ {
 public:
  Debug_Circle();
  virtual ~Debug_Circle();

  Debug_Circle(const Debug_Circle& from);

  inline Debug_Circle& operator=(const Debug_Circle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Debug_Circle& default_instance();

  static inline const Debug_Circle* internal_default_instance() {
    return reinterpret_cast<const Debug_Circle*>(
               &_Debug_Circle_default_instance_);
  }

  void Swap(Debug_Circle* other);

  // implements Message ----------------------------------------------

  inline Debug_Circle* New() const PROTOBUF_FINAL { return New(NULL); }

  Debug_Circle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Debug_Circle& from);
  void MergeFrom(const Debug_Circle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Debug_Circle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // required int32 radius = 3;
  bool has_radius() const;
  void clear_radius();
  static const int kRadiusFieldNumber = 3;
  ::google::protobuf::int32 radius() const;
  void set_radius(::google::protobuf::int32 value);

  // required float color = 4;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 4;
  float color() const;
  void set_color(float value);

  // @@protoc_insertion_point(class_scope:Debug_Circle)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_radius();
  void clear_has_radius();
  void set_has_color();
  void clear_has_color();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 radius_;
  float color_;
  friend void  protobuf_InitDefaults_sslDebug_5fData_2eproto_impl();
  friend void  protobuf_AddDesc_sslDebug_5fData_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_sslDebug_5fData_2eproto();
  friend void protobuf_ShutdownFile_sslDebug_5fData_2eproto();

};
// -------------------------------------------------------------------

class Debug_Line : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Debug_Line) */ {
 public:
  Debug_Line();
  virtual ~Debug_Line();

  Debug_Line(const Debug_Line& from);

  inline Debug_Line& operator=(const Debug_Line& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Debug_Line& default_instance();

  static inline const Debug_Line* internal_default_instance() {
    return reinterpret_cast<const Debug_Line*>(
               &_Debug_Line_default_instance_);
  }

  void Swap(Debug_Line* other);

  // implements Message ----------------------------------------------

  inline Debug_Line* New() const PROTOBUF_FINAL { return New(NULL); }

  Debug_Line* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Debug_Line& from);
  void MergeFrom(const Debug_Line& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Debug_Line* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x1 = 1;
  bool has_x1() const;
  void clear_x1();
  static const int kX1FieldNumber = 1;
  ::google::protobuf::int32 x1() const;
  void set_x1(::google::protobuf::int32 value);

  // required int32 y1 = 2;
  bool has_y1() const;
  void clear_y1();
  static const int kY1FieldNumber = 2;
  ::google::protobuf::int32 y1() const;
  void set_y1(::google::protobuf::int32 value);

  // required int32 x2 = 3;
  bool has_x2() const;
  void clear_x2();
  static const int kX2FieldNumber = 3;
  ::google::protobuf::int32 x2() const;
  void set_x2(::google::protobuf::int32 value);

  // required int32 y2 = 4;
  bool has_y2() const;
  void clear_y2();
  static const int kY2FieldNumber = 4;
  ::google::protobuf::int32 y2() const;
  void set_y2(::google::protobuf::int32 value);

  // required float color = 5;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 5;
  float color() const;
  void set_color(float value);

  // @@protoc_insertion_point(class_scope:Debug_Line)
 private:
  void set_has_x1();
  void clear_has_x1();
  void set_has_y1();
  void clear_has_y1();
  void set_has_x2();
  void clear_has_x2();
  void set_has_y2();
  void clear_has_y2();
  void set_has_color();
  void clear_has_color();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x1_;
  ::google::protobuf::int32 y1_;
  ::google::protobuf::int32 x2_;
  ::google::protobuf::int32 y2_;
  float color_;
  friend void  protobuf_InitDefaults_sslDebug_5fData_2eproto_impl();
  friend void  protobuf_AddDesc_sslDebug_5fData_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_sslDebug_5fData_2eproto();
  friend void protobuf_ShutdownFile_sslDebug_5fData_2eproto();

};
// -------------------------------------------------------------------

class Debug_AdjustBot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Debug_AdjustBot) */ {
 public:
  Debug_AdjustBot();
  virtual ~Debug_AdjustBot();

  Debug_AdjustBot(const Debug_AdjustBot& from);

  inline Debug_AdjustBot& operator=(const Debug_AdjustBot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Debug_AdjustBot& default_instance();

  static inline const Debug_AdjustBot* internal_default_instance() {
    return reinterpret_cast<const Debug_AdjustBot*>(
               &_Debug_AdjustBot_default_instance_);
  }

  void Swap(Debug_AdjustBot* other);

  // implements Message ----------------------------------------------

  inline Debug_AdjustBot* New() const PROTOBUF_FINAL { return New(NULL); }

  Debug_AdjustBot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Debug_AdjustBot& from);
  void MergeFrom(const Debug_AdjustBot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Debug_AdjustBot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // required float dir = 4;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 4;
  float dir() const;
  void set_dir(float value);

  // required int32 vx = 5;
  bool has_vx() const;
  void clear_vx();
  static const int kVxFieldNumber = 5;
  ::google::protobuf::int32 vx() const;
  void set_vx(::google::protobuf::int32 value);

  // required int32 vy = 6;
  bool has_vy() const;
  void clear_vy();
  static const int kVyFieldNumber = 6;
  ::google::protobuf::int32 vy() const;
  void set_vy(::google::protobuf::int32 value);

  // required int32 vz = 7;
  bool has_vz() const;
  void clear_vz();
  static const int kVzFieldNumber = 7;
  ::google::protobuf::int32 vz() const;
  void set_vz(::google::protobuf::int32 value);

  // required uint32 team = 8;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 8;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Debug_AdjustBot)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_dir();
  void clear_has_dir();
  void set_has_vx();
  void clear_has_vx();
  void set_has_vy();
  void clear_has_vy();
  void set_has_vz();
  void clear_has_vz();
  void set_has_team();
  void clear_has_team();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  float dir_;
  ::google::protobuf::int32 vx_;
  ::google::protobuf::int32 vy_;
  ::google::protobuf::int32 vz_;
  ::google::protobuf::uint32 team_;
  friend void  protobuf_InitDefaults_sslDebug_5fData_2eproto_impl();
  friend void  protobuf_AddDesc_sslDebug_5fData_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_sslDebug_5fData_2eproto();
  friend void protobuf_ShutdownFile_sslDebug_5fData_2eproto();

};
// -------------------------------------------------------------------

class Debug_AdjustBall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Debug_AdjustBall) */ {
 public:
  Debug_AdjustBall();
  virtual ~Debug_AdjustBall();

  Debug_AdjustBall(const Debug_AdjustBall& from);

  inline Debug_AdjustBall& operator=(const Debug_AdjustBall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Debug_AdjustBall& default_instance();

  static inline const Debug_AdjustBall* internal_default_instance() {
    return reinterpret_cast<const Debug_AdjustBall*>(
               &_Debug_AdjustBall_default_instance_);
  }

  void Swap(Debug_AdjustBall* other);

  // implements Message ----------------------------------------------

  inline Debug_AdjustBall* New() const PROTOBUF_FINAL { return New(NULL); }

  Debug_AdjustBall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Debug_AdjustBall& from);
  void MergeFrom(const Debug_AdjustBall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Debug_AdjustBall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // required int32 vx = 3;
  bool has_vx() const;
  void clear_vx();
  static const int kVxFieldNumber = 3;
  ::google::protobuf::int32 vx() const;
  void set_vx(::google::protobuf::int32 value);

  // required int32 vy = 4;
  bool has_vy() const;
  void clear_vy();
  static const int kVyFieldNumber = 4;
  ::google::protobuf::int32 vy() const;
  void set_vy(::google::protobuf::int32 value);

  // required uint32 vz = 5;
  bool has_vz() const;
  void clear_vz();
  static const int kVzFieldNumber = 5;
  ::google::protobuf::uint32 vz() const;
  void set_vz(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Debug_AdjustBall)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_vx();
  void clear_has_vx();
  void set_has_vy();
  void clear_has_vy();
  void set_has_vz();
  void clear_has_vz();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 vx_;
  ::google::protobuf::int32 vy_;
  ::google::protobuf::uint32 vz_;
  friend void  protobuf_InitDefaults_sslDebug_5fData_2eproto_impl();
  friend void  protobuf_AddDesc_sslDebug_5fData_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_sslDebug_5fData_2eproto();
  friend void protobuf_ShutdownFile_sslDebug_5fData_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// sslDebug_Data

// required string id = 1;
inline bool sslDebug_Data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sslDebug_Data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sslDebug_Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sslDebug_Data::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& sslDebug_Data::id() const {
  // @@protoc_insertion_point(field_get:sslDebug_Data.id)
  return id_.GetNoArena();
}
inline void sslDebug_Data::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sslDebug_Data.id)
}
#if LANG_CXX11
inline void sslDebug_Data::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sslDebug_Data.id)
}
#endif
inline void sslDebug_Data::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sslDebug_Data.id)
}
inline void sslDebug_Data::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sslDebug_Data.id)
}
inline ::std::string* sslDebug_Data::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:sslDebug_Data.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sslDebug_Data::release_id() {
  // @@protoc_insertion_point(field_release:sslDebug_Data.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sslDebug_Data::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:sslDebug_Data.id)
}

// repeated .Debug_Circle circle = 2;
inline int sslDebug_Data::circle_size() const {
  return circle_.size();
}
inline void sslDebug_Data::clear_circle() {
  circle_.Clear();
}
inline const ::Debug_Circle& sslDebug_Data::circle(int index) const {
  // @@protoc_insertion_point(field_get:sslDebug_Data.circle)
  return circle_.Get(index);
}
inline ::Debug_Circle* sslDebug_Data::mutable_circle(int index) {
  // @@protoc_insertion_point(field_mutable:sslDebug_Data.circle)
  return circle_.Mutable(index);
}
inline ::Debug_Circle* sslDebug_Data::add_circle() {
  // @@protoc_insertion_point(field_add:sslDebug_Data.circle)
  return circle_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Debug_Circle >*
sslDebug_Data::mutable_circle() {
  // @@protoc_insertion_point(field_mutable_list:sslDebug_Data.circle)
  return &circle_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Debug_Circle >&
sslDebug_Data::circle() const {
  // @@protoc_insertion_point(field_list:sslDebug_Data.circle)
  return circle_;
}

// repeated .Debug_Line line = 3;
inline int sslDebug_Data::line_size() const {
  return line_.size();
}
inline void sslDebug_Data::clear_line() {
  line_.Clear();
}
inline const ::Debug_Line& sslDebug_Data::line(int index) const {
  // @@protoc_insertion_point(field_get:sslDebug_Data.line)
  return line_.Get(index);
}
inline ::Debug_Line* sslDebug_Data::mutable_line(int index) {
  // @@protoc_insertion_point(field_mutable:sslDebug_Data.line)
  return line_.Mutable(index);
}
inline ::Debug_Line* sslDebug_Data::add_line() {
  // @@protoc_insertion_point(field_add:sslDebug_Data.line)
  return line_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Debug_Line >*
sslDebug_Data::mutable_line() {
  // @@protoc_insertion_point(field_mutable_list:sslDebug_Data.line)
  return &line_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Debug_Line >&
sslDebug_Data::line() const {
  // @@protoc_insertion_point(field_list:sslDebug_Data.line)
  return line_;
}

// repeated .Debug_AdjustBot botpos = 4;
inline int sslDebug_Data::botpos_size() const {
  return botpos_.size();
}
inline void sslDebug_Data::clear_botpos() {
  botpos_.Clear();
}
inline const ::Debug_AdjustBot& sslDebug_Data::botpos(int index) const {
  // @@protoc_insertion_point(field_get:sslDebug_Data.botpos)
  return botpos_.Get(index);
}
inline ::Debug_AdjustBot* sslDebug_Data::mutable_botpos(int index) {
  // @@protoc_insertion_point(field_mutable:sslDebug_Data.botpos)
  return botpos_.Mutable(index);
}
inline ::Debug_AdjustBot* sslDebug_Data::add_botpos() {
  // @@protoc_insertion_point(field_add:sslDebug_Data.botpos)
  return botpos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBot >*
sslDebug_Data::mutable_botpos() {
  // @@protoc_insertion_point(field_mutable_list:sslDebug_Data.botpos)
  return &botpos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBot >&
sslDebug_Data::botpos() const {
  // @@protoc_insertion_point(field_list:sslDebug_Data.botpos)
  return botpos_;
}

// repeated .Debug_AdjustBall ballpos = 5;
inline int sslDebug_Data::ballpos_size() const {
  return ballpos_.size();
}
inline void sslDebug_Data::clear_ballpos() {
  ballpos_.Clear();
}
inline const ::Debug_AdjustBall& sslDebug_Data::ballpos(int index) const {
  // @@protoc_insertion_point(field_get:sslDebug_Data.ballpos)
  return ballpos_.Get(index);
}
inline ::Debug_AdjustBall* sslDebug_Data::mutable_ballpos(int index) {
  // @@protoc_insertion_point(field_mutable:sslDebug_Data.ballpos)
  return ballpos_.Mutable(index);
}
inline ::Debug_AdjustBall* sslDebug_Data::add_ballpos() {
  // @@protoc_insertion_point(field_add:sslDebug_Data.ballpos)
  return ballpos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBall >*
sslDebug_Data::mutable_ballpos() {
  // @@protoc_insertion_point(field_mutable_list:sslDebug_Data.ballpos)
  return &ballpos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Debug_AdjustBall >&
sslDebug_Data::ballpos() const {
  // @@protoc_insertion_point(field_list:sslDebug_Data.ballpos)
  return ballpos_;
}

// -------------------------------------------------------------------

// Debug_Circle

// required int32 x = 1;
inline bool Debug_Circle::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Debug_Circle::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Debug_Circle::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Debug_Circle::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Debug_Circle::x() const {
  // @@protoc_insertion_point(field_get:Debug_Circle.x)
  return x_;
}
inline void Debug_Circle::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Debug_Circle.x)
}

// required int32 y = 2;
inline bool Debug_Circle::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Debug_Circle::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Debug_Circle::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Debug_Circle::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Debug_Circle::y() const {
  // @@protoc_insertion_point(field_get:Debug_Circle.y)
  return y_;
}
inline void Debug_Circle::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Debug_Circle.y)
}

// required int32 radius = 3;
inline bool Debug_Circle::has_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Debug_Circle::set_has_radius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Debug_Circle::clear_has_radius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Debug_Circle::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 Debug_Circle::radius() const {
  // @@protoc_insertion_point(field_get:Debug_Circle.radius)
  return radius_;
}
inline void Debug_Circle::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:Debug_Circle.radius)
}

// required float color = 4;
inline bool Debug_Circle::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Debug_Circle::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Debug_Circle::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Debug_Circle::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline float Debug_Circle::color() const {
  // @@protoc_insertion_point(field_get:Debug_Circle.color)
  return color_;
}
inline void Debug_Circle::set_color(float value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Debug_Circle.color)
}

// -------------------------------------------------------------------

// Debug_Line

// required int32 x1 = 1;
inline bool Debug_Line::has_x1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Debug_Line::set_has_x1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Debug_Line::clear_has_x1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Debug_Line::clear_x1() {
  x1_ = 0;
  clear_has_x1();
}
inline ::google::protobuf::int32 Debug_Line::x1() const {
  // @@protoc_insertion_point(field_get:Debug_Line.x1)
  return x1_;
}
inline void Debug_Line::set_x1(::google::protobuf::int32 value) {
  set_has_x1();
  x1_ = value;
  // @@protoc_insertion_point(field_set:Debug_Line.x1)
}

// required int32 y1 = 2;
inline bool Debug_Line::has_y1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Debug_Line::set_has_y1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Debug_Line::clear_has_y1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Debug_Line::clear_y1() {
  y1_ = 0;
  clear_has_y1();
}
inline ::google::protobuf::int32 Debug_Line::y1() const {
  // @@protoc_insertion_point(field_get:Debug_Line.y1)
  return y1_;
}
inline void Debug_Line::set_y1(::google::protobuf::int32 value) {
  set_has_y1();
  y1_ = value;
  // @@protoc_insertion_point(field_set:Debug_Line.y1)
}

// required int32 x2 = 3;
inline bool Debug_Line::has_x2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Debug_Line::set_has_x2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Debug_Line::clear_has_x2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Debug_Line::clear_x2() {
  x2_ = 0;
  clear_has_x2();
}
inline ::google::protobuf::int32 Debug_Line::x2() const {
  // @@protoc_insertion_point(field_get:Debug_Line.x2)
  return x2_;
}
inline void Debug_Line::set_x2(::google::protobuf::int32 value) {
  set_has_x2();
  x2_ = value;
  // @@protoc_insertion_point(field_set:Debug_Line.x2)
}

// required int32 y2 = 4;
inline bool Debug_Line::has_y2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Debug_Line::set_has_y2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Debug_Line::clear_has_y2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Debug_Line::clear_y2() {
  y2_ = 0;
  clear_has_y2();
}
inline ::google::protobuf::int32 Debug_Line::y2() const {
  // @@protoc_insertion_point(field_get:Debug_Line.y2)
  return y2_;
}
inline void Debug_Line::set_y2(::google::protobuf::int32 value) {
  set_has_y2();
  y2_ = value;
  // @@protoc_insertion_point(field_set:Debug_Line.y2)
}

// required float color = 5;
inline bool Debug_Line::has_color() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Debug_Line::set_has_color() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Debug_Line::clear_has_color() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Debug_Line::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline float Debug_Line::color() const {
  // @@protoc_insertion_point(field_get:Debug_Line.color)
  return color_;
}
inline void Debug_Line::set_color(float value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Debug_Line.color)
}

// -------------------------------------------------------------------

// Debug_AdjustBot

// required uint32 id = 1;
inline bool Debug_AdjustBot::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Debug_AdjustBot::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Debug_AdjustBot::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Debug_AdjustBot::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Debug_AdjustBot::id() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.id)
  return id_;
}
inline void Debug_AdjustBot::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.id)
}

// required int32 x = 2;
inline bool Debug_AdjustBot::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Debug_AdjustBot::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Debug_AdjustBot::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Debug_AdjustBot::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Debug_AdjustBot::x() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.x)
  return x_;
}
inline void Debug_AdjustBot::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.x)
}

// required int32 y = 3;
inline bool Debug_AdjustBot::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Debug_AdjustBot::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Debug_AdjustBot::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Debug_AdjustBot::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Debug_AdjustBot::y() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.y)
  return y_;
}
inline void Debug_AdjustBot::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.y)
}

// required float dir = 4;
inline bool Debug_AdjustBot::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Debug_AdjustBot::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Debug_AdjustBot::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Debug_AdjustBot::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float Debug_AdjustBot::dir() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.dir)
  return dir_;
}
inline void Debug_AdjustBot::set_dir(float value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.dir)
}

// required int32 vx = 5;
inline bool Debug_AdjustBot::has_vx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Debug_AdjustBot::set_has_vx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Debug_AdjustBot::clear_has_vx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Debug_AdjustBot::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
inline ::google::protobuf::int32 Debug_AdjustBot::vx() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.vx)
  return vx_;
}
inline void Debug_AdjustBot::set_vx(::google::protobuf::int32 value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.vx)
}

// required int32 vy = 6;
inline bool Debug_AdjustBot::has_vy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Debug_AdjustBot::set_has_vy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Debug_AdjustBot::clear_has_vy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Debug_AdjustBot::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
inline ::google::protobuf::int32 Debug_AdjustBot::vy() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.vy)
  return vy_;
}
inline void Debug_AdjustBot::set_vy(::google::protobuf::int32 value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.vy)
}

// required int32 vz = 7;
inline bool Debug_AdjustBot::has_vz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Debug_AdjustBot::set_has_vz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Debug_AdjustBot::clear_has_vz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Debug_AdjustBot::clear_vz() {
  vz_ = 0;
  clear_has_vz();
}
inline ::google::protobuf::int32 Debug_AdjustBot::vz() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.vz)
  return vz_;
}
inline void Debug_AdjustBot::set_vz(::google::protobuf::int32 value) {
  set_has_vz();
  vz_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.vz)
}

// required uint32 team = 8;
inline bool Debug_AdjustBot::has_team() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Debug_AdjustBot::set_has_team() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Debug_AdjustBot::clear_has_team() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Debug_AdjustBot::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 Debug_AdjustBot::team() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBot.team)
  return team_;
}
inline void Debug_AdjustBot::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBot.team)
}

// -------------------------------------------------------------------

// Debug_AdjustBall

// required int32 x = 1;
inline bool Debug_AdjustBall::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Debug_AdjustBall::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Debug_AdjustBall::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Debug_AdjustBall::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Debug_AdjustBall::x() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBall.x)
  return x_;
}
inline void Debug_AdjustBall::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBall.x)
}

// required int32 y = 2;
inline bool Debug_AdjustBall::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Debug_AdjustBall::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Debug_AdjustBall::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Debug_AdjustBall::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Debug_AdjustBall::y() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBall.y)
  return y_;
}
inline void Debug_AdjustBall::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBall.y)
}

// required int32 vx = 3;
inline bool Debug_AdjustBall::has_vx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Debug_AdjustBall::set_has_vx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Debug_AdjustBall::clear_has_vx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Debug_AdjustBall::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
inline ::google::protobuf::int32 Debug_AdjustBall::vx() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBall.vx)
  return vx_;
}
inline void Debug_AdjustBall::set_vx(::google::protobuf::int32 value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBall.vx)
}

// required int32 vy = 4;
inline bool Debug_AdjustBall::has_vy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Debug_AdjustBall::set_has_vy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Debug_AdjustBall::clear_has_vy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Debug_AdjustBall::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
inline ::google::protobuf::int32 Debug_AdjustBall::vy() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBall.vy)
  return vy_;
}
inline void Debug_AdjustBall::set_vy(::google::protobuf::int32 value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBall.vy)
}

// required uint32 vz = 5;
inline bool Debug_AdjustBall::has_vz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Debug_AdjustBall::set_has_vz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Debug_AdjustBall::clear_has_vz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Debug_AdjustBall::clear_vz() {
  vz_ = 0u;
  clear_has_vz();
}
inline ::google::protobuf::uint32 Debug_AdjustBall::vz() const {
  // @@protoc_insertion_point(field_get:Debug_AdjustBall.vz)
  return vz_;
}
inline void Debug_AdjustBall::set_vz(::google::protobuf::uint32 value) {
  set_has_vz();
  vz_ = value;
  // @@protoc_insertion_point(field_set:Debug_AdjustBall.vz)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sslDebug_5fData_2eproto__INCLUDED
