// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Commands.proto
package Protobuf;

public final class GrSimCommands {
  private GrSimCommands() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface grSim_Robot_CommandOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 id = 1;
    boolean hasId();
    int getId();
    
    // required float kickspeedx = 2;
    boolean hasKickspeedx();
    float getKickspeedx();
    
    // required float kickspeedz = 3;
    boolean hasKickspeedz();
    float getKickspeedz();
    
    // required float veltangent = 4;
    boolean hasVeltangent();
    float getVeltangent();
    
    // required float velnormal = 5;
    boolean hasVelnormal();
    float getVelnormal();
    
    // required float velangular = 6;
    boolean hasVelangular();
    float getVelangular();
    
    // required bool spinner = 7;
    boolean hasSpinner();
    boolean getSpinner();
    
    // required bool wheelsspeed = 8;
    boolean hasWheelsspeed();
    boolean getWheelsspeed();
    
    // optional float wheel1 = 9;
    boolean hasWheel1();
    float getWheel1();
    
    // optional float wheel2 = 10;
    boolean hasWheel2();
    float getWheel2();
    
    // optional float wheel3 = 11;
    boolean hasWheel3();
    float getWheel3();
    
    // optional float wheel4 = 12;
    boolean hasWheel4();
    float getWheel4();
  }
  public static final class grSim_Robot_Command extends
      com.google.protobuf.GeneratedMessage
      implements grSim_Robot_CommandOrBuilder {
    // Use grSim_Robot_Command.newBuilder() to construct.
    private grSim_Robot_Command(Builder builder) {
      super(builder);
    }
    private grSim_Robot_Command(boolean noInit) {}
    
    private static final grSim_Robot_Command defaultInstance;
    public static grSim_Robot_Command getDefaultInstance() {
      return defaultInstance;
    }
    
    public grSim_Robot_Command getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GrSimCommands.internal_static_grSim_Robot_Command_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GrSimCommands.internal_static_grSim_Robot_Command_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // required float kickspeedx = 2;
    public static final int KICKSPEEDX_FIELD_NUMBER = 2;
    private float kickspeedx_;
    public boolean hasKickspeedx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getKickspeedx() {
      return kickspeedx_;
    }
    
    // required float kickspeedz = 3;
    public static final int KICKSPEEDZ_FIELD_NUMBER = 3;
    private float kickspeedz_;
    public boolean hasKickspeedz() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getKickspeedz() {
      return kickspeedz_;
    }
    
    // required float veltangent = 4;
    public static final int VELTANGENT_FIELD_NUMBER = 4;
    private float veltangent_;
    public boolean hasVeltangent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getVeltangent() {
      return veltangent_;
    }
    
    // required float velnormal = 5;
    public static final int VELNORMAL_FIELD_NUMBER = 5;
    private float velnormal_;
    public boolean hasVelnormal() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getVelnormal() {
      return velnormal_;
    }
    
    // required float velangular = 6;
    public static final int VELANGULAR_FIELD_NUMBER = 6;
    private float velangular_;
    public boolean hasVelangular() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public float getVelangular() {
      return velangular_;
    }
    
    // required bool spinner = 7;
    public static final int SPINNER_FIELD_NUMBER = 7;
    private boolean spinner_;
    public boolean hasSpinner() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getSpinner() {
      return spinner_;
    }
    
    // required bool wheelsspeed = 8;
    public static final int WHEELSSPEED_FIELD_NUMBER = 8;
    private boolean wheelsspeed_;
    public boolean hasWheelsspeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getWheelsspeed() {
      return wheelsspeed_;
    }
    
    // optional float wheel1 = 9;
    public static final int WHEEL1_FIELD_NUMBER = 9;
    private float wheel1_;
    public boolean hasWheel1() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getWheel1() {
      return wheel1_;
    }
    
    // optional float wheel2 = 10;
    public static final int WHEEL2_FIELD_NUMBER = 10;
    private float wheel2_;
    public boolean hasWheel2() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public float getWheel2() {
      return wheel2_;
    }
    
    // optional float wheel3 = 11;
    public static final int WHEEL3_FIELD_NUMBER = 11;
    private float wheel3_;
    public boolean hasWheel3() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getWheel3() {
      return wheel3_;
    }
    
    // optional float wheel4 = 12;
    public static final int WHEEL4_FIELD_NUMBER = 12;
    private float wheel4_;
    public boolean hasWheel4() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public float getWheel4() {
      return wheel4_;
    }
    
    private void initFields() {
      id_ = 0;
      kickspeedx_ = 0F;
      kickspeedz_ = 0F;
      veltangent_ = 0F;
      velnormal_ = 0F;
      velangular_ = 0F;
      spinner_ = false;
      wheelsspeed_ = false;
      wheel1_ = 0F;
      wheel2_ = 0F;
      wheel3_ = 0F;
      wheel4_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKickspeedx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKickspeedz()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVeltangent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVelnormal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVelangular()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpinner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWheelsspeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, kickspeedx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, kickspeedz_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, veltangent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, velnormal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, velangular_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, spinner_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, wheelsspeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, wheel1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, wheel2_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, wheel3_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, wheel4_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, kickspeedx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, kickspeedz_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, veltangent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, velnormal_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, velangular_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, spinner_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, wheelsspeed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, wheel1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, wheel2_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, wheel3_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, wheel4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GrSimCommands.grSim_Robot_Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GrSimCommands.grSim_Robot_Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GrSimCommands.grSim_Robot_Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GrSimCommands.grSim_Robot_CommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GrSimCommands.internal_static_grSim_Robot_Command_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GrSimCommands.internal_static_grSim_Robot_Command_fieldAccessorTable;
      }
      
      // Construct using GrSimCommands.grSim_Robot_Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        kickspeedx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        kickspeedz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        veltangent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        velnormal_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        velangular_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        spinner_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        wheelsspeed_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        wheel1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        wheel2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        wheel3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        wheel4_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GrSimCommands.grSim_Robot_Command.getDescriptor();
      }
      
      public GrSimCommands.grSim_Robot_Command getDefaultInstanceForType() {
        return GrSimCommands.grSim_Robot_Command.getDefaultInstance();
      }
      
      public GrSimCommands.grSim_Robot_Command build() {
        GrSimCommands.grSim_Robot_Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private GrSimCommands.grSim_Robot_Command buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        GrSimCommands.grSim_Robot_Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public GrSimCommands.grSim_Robot_Command buildPartial() {
        GrSimCommands.grSim_Robot_Command result = new GrSimCommands.grSim_Robot_Command(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kickspeedx_ = kickspeedx_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kickspeedz_ = kickspeedz_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.veltangent_ = veltangent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.velnormal_ = velnormal_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.velangular_ = velangular_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.spinner_ = spinner_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wheelsspeed_ = wheelsspeed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.wheel1_ = wheel1_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.wheel2_ = wheel2_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.wheel3_ = wheel3_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.wheel4_ = wheel4_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GrSimCommands.grSim_Robot_Command) {
          return mergeFrom((GrSimCommands.grSim_Robot_Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(GrSimCommands.grSim_Robot_Command other) {
        if (other == GrSimCommands.grSim_Robot_Command.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasKickspeedx()) {
          setKickspeedx(other.getKickspeedx());
        }
        if (other.hasKickspeedz()) {
          setKickspeedz(other.getKickspeedz());
        }
        if (other.hasVeltangent()) {
          setVeltangent(other.getVeltangent());
        }
        if (other.hasVelnormal()) {
          setVelnormal(other.getVelnormal());
        }
        if (other.hasVelangular()) {
          setVelangular(other.getVelangular());
        }
        if (other.hasSpinner()) {
          setSpinner(other.getSpinner());
        }
        if (other.hasWheelsspeed()) {
          setWheelsspeed(other.getWheelsspeed());
        }
        if (other.hasWheel1()) {
          setWheel1(other.getWheel1());
        }
        if (other.hasWheel2()) {
          setWheel2(other.getWheel2());
        }
        if (other.hasWheel3()) {
          setWheel3(other.getWheel3());
        }
        if (other.hasWheel4()) {
          setWheel4(other.getWheel4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasKickspeedx()) {
          
          return false;
        }
        if (!hasKickspeedz()) {
          
          return false;
        }
        if (!hasVeltangent()) {
          
          return false;
        }
        if (!hasVelnormal()) {
          
          return false;
        }
        if (!hasVelangular()) {
          
          return false;
        }
        if (!hasSpinner()) {
          
          return false;
        }
        if (!hasWheelsspeed()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              kickspeedx_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              kickspeedz_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              veltangent_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              velnormal_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              velangular_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              spinner_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              wheelsspeed_ = input.readBool();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              wheel1_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              wheel2_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              wheel3_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              wheel4_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // required float kickspeedx = 2;
      private float kickspeedx_ ;
      public boolean hasKickspeedx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getKickspeedx() {
        return kickspeedx_;
      }
      public Builder setKickspeedx(float value) {
        bitField0_ |= 0x00000002;
        kickspeedx_ = value;
        onChanged();
        return this;
      }
      public Builder clearKickspeedx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kickspeedx_ = 0F;
        onChanged();
        return this;
      }
      
      // required float kickspeedz = 3;
      private float kickspeedz_ ;
      public boolean hasKickspeedz() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getKickspeedz() {
        return kickspeedz_;
      }
      public Builder setKickspeedz(float value) {
        bitField0_ |= 0x00000004;
        kickspeedz_ = value;
        onChanged();
        return this;
      }
      public Builder clearKickspeedz() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kickspeedz_ = 0F;
        onChanged();
        return this;
      }
      
      // required float veltangent = 4;
      private float veltangent_ ;
      public boolean hasVeltangent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getVeltangent() {
        return veltangent_;
      }
      public Builder setVeltangent(float value) {
        bitField0_ |= 0x00000008;
        veltangent_ = value;
        onChanged();
        return this;
      }
      public Builder clearVeltangent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        veltangent_ = 0F;
        onChanged();
        return this;
      }
      
      // required float velnormal = 5;
      private float velnormal_ ;
      public boolean hasVelnormal() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getVelnormal() {
        return velnormal_;
      }
      public Builder setVelnormal(float value) {
        bitField0_ |= 0x00000010;
        velnormal_ = value;
        onChanged();
        return this;
      }
      public Builder clearVelnormal() {
        bitField0_ = (bitField0_ & ~0x00000010);
        velnormal_ = 0F;
        onChanged();
        return this;
      }
      
      // required float velangular = 6;
      private float velangular_ ;
      public boolean hasVelangular() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getVelangular() {
        return velangular_;
      }
      public Builder setVelangular(float value) {
        bitField0_ |= 0x00000020;
        velangular_ = value;
        onChanged();
        return this;
      }
      public Builder clearVelangular() {
        bitField0_ = (bitField0_ & ~0x00000020);
        velangular_ = 0F;
        onChanged();
        return this;
      }
      
      // required bool spinner = 7;
      private boolean spinner_ ;
      public boolean hasSpinner() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getSpinner() {
        return spinner_;
      }
      public Builder setSpinner(boolean value) {
        bitField0_ |= 0x00000040;
        spinner_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpinner() {
        bitField0_ = (bitField0_ & ~0x00000040);
        spinner_ = false;
        onChanged();
        return this;
      }
      
      // required bool wheelsspeed = 8;
      private boolean wheelsspeed_ ;
      public boolean hasWheelsspeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getWheelsspeed() {
        return wheelsspeed_;
      }
      public Builder setWheelsspeed(boolean value) {
        bitField0_ |= 0x00000080;
        wheelsspeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearWheelsspeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wheelsspeed_ = false;
        onChanged();
        return this;
      }
      
      // optional float wheel1 = 9;
      private float wheel1_ ;
      public boolean hasWheel1() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getWheel1() {
        return wheel1_;
      }
      public Builder setWheel1(float value) {
        bitField0_ |= 0x00000100;
        wheel1_ = value;
        onChanged();
        return this;
      }
      public Builder clearWheel1() {
        bitField0_ = (bitField0_ & ~0x00000100);
        wheel1_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float wheel2 = 10;
      private float wheel2_ ;
      public boolean hasWheel2() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getWheel2() {
        return wheel2_;
      }
      public Builder setWheel2(float value) {
        bitField0_ |= 0x00000200;
        wheel2_ = value;
        onChanged();
        return this;
      }
      public Builder clearWheel2() {
        bitField0_ = (bitField0_ & ~0x00000200);
        wheel2_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float wheel3 = 11;
      private float wheel3_ ;
      public boolean hasWheel3() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getWheel3() {
        return wheel3_;
      }
      public Builder setWheel3(float value) {
        bitField0_ |= 0x00000400;
        wheel3_ = value;
        onChanged();
        return this;
      }
      public Builder clearWheel3() {
        bitField0_ = (bitField0_ & ~0x00000400);
        wheel3_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float wheel4 = 12;
      private float wheel4_ ;
      public boolean hasWheel4() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public float getWheel4() {
        return wheel4_;
      }
      public Builder setWheel4(float value) {
        bitField0_ |= 0x00000800;
        wheel4_ = value;
        onChanged();
        return this;
      }
      public Builder clearWheel4() {
        bitField0_ = (bitField0_ & ~0x00000800);
        wheel4_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:grSim_Robot_Command)
    }
    
    static {
      defaultInstance = new grSim_Robot_Command(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:grSim_Robot_Command)
  }
  
  public interface grSim_CommandsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required double timestamp = 1;
    boolean hasTimestamp();
    double getTimestamp();
    
    // required bool isteamyellow = 2;
    boolean hasIsteamyellow();
    boolean getIsteamyellow();
    
    // repeated .grSim_Robot_Command robot_commands = 3;
    java.util.List<GrSimCommands.grSim_Robot_Command> 
        getRobotCommandsList();
    GrSimCommands.grSim_Robot_Command getRobotCommands(int index);
    int getRobotCommandsCount();
    java.util.List<? extends GrSimCommands.grSim_Robot_CommandOrBuilder> 
        getRobotCommandsOrBuilderList();
    GrSimCommands.grSim_Robot_CommandOrBuilder getRobotCommandsOrBuilder(
        int index);
  }
  public static final class grSim_Commands extends
      com.google.protobuf.GeneratedMessage
      implements grSim_CommandsOrBuilder {
    // Use grSim_Commands.newBuilder() to construct.
    private grSim_Commands(Builder builder) {
      super(builder);
    }
    private grSim_Commands(boolean noInit) {}
    
    private static final grSim_Commands defaultInstance;
    public static grSim_Commands getDefaultInstance() {
      return defaultInstance;
    }
    
    public grSim_Commands getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GrSimCommands.internal_static_grSim_Commands_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GrSimCommands.internal_static_grSim_Commands_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required double timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private double timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getTimestamp() {
      return timestamp_;
    }
    
    // required bool isteamyellow = 2;
    public static final int ISTEAMYELLOW_FIELD_NUMBER = 2;
    private boolean isteamyellow_;
    public boolean hasIsteamyellow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsteamyellow() {
      return isteamyellow_;
    }
    
    // repeated .grSim_Robot_Command robot_commands = 3;
    public static final int ROBOT_COMMANDS_FIELD_NUMBER = 3;
    private java.util.List<GrSimCommands.grSim_Robot_Command> robotCommands_;
    public java.util.List<GrSimCommands.grSim_Robot_Command> getRobotCommandsList() {
      return robotCommands_;
    }
    public java.util.List<? extends GrSimCommands.grSim_Robot_CommandOrBuilder> 
        getRobotCommandsOrBuilderList() {
      return robotCommands_;
    }
    public int getRobotCommandsCount() {
      return robotCommands_.size();
    }
    public GrSimCommands.grSim_Robot_Command getRobotCommands(int index) {
      return robotCommands_.get(index);
    }
    public GrSimCommands.grSim_Robot_CommandOrBuilder getRobotCommandsOrBuilder(
        int index) {
      return robotCommands_.get(index);
    }
    
    private void initFields() {
      timestamp_ = 0D;
      isteamyellow_ = false;
      robotCommands_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsteamyellow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRobotCommandsCount(); i++) {
        if (!getRobotCommands(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isteamyellow_);
      }
      for (int i = 0; i < robotCommands_.size(); i++) {
        output.writeMessage(3, robotCommands_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isteamyellow_);
      }
      for (int i = 0; i < robotCommands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, robotCommands_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static GrSimCommands.grSim_Commands parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GrSimCommands.grSim_Commands parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static GrSimCommands.grSim_Commands parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static GrSimCommands.grSim_Commands parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GrSimCommands.grSim_Commands prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GrSimCommands.grSim_CommandsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GrSimCommands.internal_static_grSim_Commands_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GrSimCommands.internal_static_grSim_Commands_fieldAccessorTable;
      }
      
      // Construct using GrSimCommands.grSim_Commands.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRobotCommandsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        isteamyellow_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (robotCommandsBuilder_ == null) {
          robotCommands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          robotCommandsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GrSimCommands.grSim_Commands.getDescriptor();
      }
      
      public GrSimCommands.grSim_Commands getDefaultInstanceForType() {
        return GrSimCommands.grSim_Commands.getDefaultInstance();
      }
      
      public GrSimCommands.grSim_Commands build() {
        GrSimCommands.grSim_Commands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private GrSimCommands.grSim_Commands buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        GrSimCommands.grSim_Commands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public GrSimCommands.grSim_Commands buildPartial() {
        GrSimCommands.grSim_Commands result = new GrSimCommands.grSim_Commands(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isteamyellow_ = isteamyellow_;
        if (robotCommandsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            robotCommands_ = java.util.Collections.unmodifiableList(robotCommands_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.robotCommands_ = robotCommands_;
        } else {
          result.robotCommands_ = robotCommandsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GrSimCommands.grSim_Commands) {
          return mergeFrom((GrSimCommands.grSim_Commands)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(GrSimCommands.grSim_Commands other) {
        if (other == GrSimCommands.grSim_Commands.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasIsteamyellow()) {
          setIsteamyellow(other.getIsteamyellow());
        }
        if (robotCommandsBuilder_ == null) {
          if (!other.robotCommands_.isEmpty()) {
            if (robotCommands_.isEmpty()) {
              robotCommands_ = other.robotCommands_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRobotCommandsIsMutable();
              robotCommands_.addAll(other.robotCommands_);
            }
            onChanged();
          }
        } else {
          if (!other.robotCommands_.isEmpty()) {
            if (robotCommandsBuilder_.isEmpty()) {
              robotCommandsBuilder_.dispose();
              robotCommandsBuilder_ = null;
              robotCommands_ = other.robotCommands_;
              bitField0_ = (bitField0_ & ~0x00000004);
              robotCommandsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRobotCommandsFieldBuilder() : null;
            } else {
              robotCommandsBuilder_.addAllMessages(other.robotCommands_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasIsteamyellow()) {
          
          return false;
        }
        for (int i = 0; i < getRobotCommandsCount(); i++) {
          if (!getRobotCommands(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isteamyellow_ = input.readBool();
              break;
            }
            case 26: {
              GrSimCommands.grSim_Robot_Command.Builder subBuilder = GrSimCommands.grSim_Robot_Command.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRobotCommands(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required double timestamp = 1;
      private double timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      
      // required bool isteamyellow = 2;
      private boolean isteamyellow_ ;
      public boolean hasIsteamyellow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsteamyellow() {
        return isteamyellow_;
      }
      public Builder setIsteamyellow(boolean value) {
        bitField0_ |= 0x00000002;
        isteamyellow_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsteamyellow() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isteamyellow_ = false;
        onChanged();
        return this;
      }
      
      // repeated .grSim_Robot_Command robot_commands = 3;
      private java.util.List<GrSimCommands.grSim_Robot_Command> robotCommands_ =
        java.util.Collections.emptyList();
      private void ensureRobotCommandsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          robotCommands_ = new java.util.ArrayList<GrSimCommands.grSim_Robot_Command>(robotCommands_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          GrSimCommands.grSim_Robot_Command, GrSimCommands.grSim_Robot_Command.Builder, GrSimCommands.grSim_Robot_CommandOrBuilder> robotCommandsBuilder_;
      
      public java.util.List<GrSimCommands.grSim_Robot_Command> getRobotCommandsList() {
        if (robotCommandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(robotCommands_);
        } else {
          return robotCommandsBuilder_.getMessageList();
        }
      }
      public int getRobotCommandsCount() {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.size();
        } else {
          return robotCommandsBuilder_.getCount();
        }
      }
      public GrSimCommands.grSim_Robot_Command getRobotCommands(int index) {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.get(index);
        } else {
          return robotCommandsBuilder_.getMessage(index);
        }
      }
      public Builder setRobotCommands(
          int index, GrSimCommands.grSim_Robot_Command value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.set(index, value);
          onChanged();
        } else {
          robotCommandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRobotCommands(
          int index, GrSimCommands.grSim_Robot_Command.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.set(index, builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRobotCommands(GrSimCommands.grSim_Robot_Command value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.add(value);
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRobotCommands(
          int index, GrSimCommands.grSim_Robot_Command value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.add(index, value);
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRobotCommands(
          GrSimCommands.grSim_Robot_Command.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.add(builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRobotCommands(
          int index, GrSimCommands.grSim_Robot_Command.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.add(index, builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRobotCommands(
          java.lang.Iterable<? extends GrSimCommands.grSim_Robot_Command> values) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          super.addAll(values, robotCommands_);
          onChanged();
        } else {
          robotCommandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRobotCommands() {
        if (robotCommandsBuilder_ == null) {
          robotCommands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          robotCommandsBuilder_.clear();
        }
        return this;
      }
      public Builder removeRobotCommands(int index) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.remove(index);
          onChanged();
        } else {
          robotCommandsBuilder_.remove(index);
        }
        return this;
      }
      public GrSimCommands.grSim_Robot_Command.Builder getRobotCommandsBuilder(
          int index) {
        return getRobotCommandsFieldBuilder().getBuilder(index);
      }
      public GrSimCommands.grSim_Robot_CommandOrBuilder getRobotCommandsOrBuilder(
          int index) {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.get(index);  } else {
          return robotCommandsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends GrSimCommands.grSim_Robot_CommandOrBuilder> 
           getRobotCommandsOrBuilderList() {
        if (robotCommandsBuilder_ != null) {
          return robotCommandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(robotCommands_);
        }
      }
      public GrSimCommands.grSim_Robot_Command.Builder addRobotCommandsBuilder() {
        return getRobotCommandsFieldBuilder().addBuilder(
            GrSimCommands.grSim_Robot_Command.getDefaultInstance());
      }
      public GrSimCommands.grSim_Robot_Command.Builder addRobotCommandsBuilder(
          int index) {
        return getRobotCommandsFieldBuilder().addBuilder(
            index, GrSimCommands.grSim_Robot_Command.getDefaultInstance());
      }
      public java.util.List<GrSimCommands.grSim_Robot_Command.Builder> 
           getRobotCommandsBuilderList() {
        return getRobotCommandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          GrSimCommands.grSim_Robot_Command, GrSimCommands.grSim_Robot_Command.Builder, GrSimCommands.grSim_Robot_CommandOrBuilder> 
          getRobotCommandsFieldBuilder() {
        if (robotCommandsBuilder_ == null) {
          robotCommandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              GrSimCommands.grSim_Robot_Command, GrSimCommands.grSim_Robot_Command.Builder, GrSimCommands.grSim_Robot_CommandOrBuilder>(
                  robotCommands_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          robotCommands_ = null;
        }
        return robotCommandsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:grSim_Commands)
    }
    
    static {
      defaultInstance = new grSim_Commands(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:grSim_Commands)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grSim_Robot_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grSim_Robot_Command_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_grSim_Commands_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_grSim_Commands_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024grSim_Commands.proto\"\352\001\n\023grSim_Robot_C" +
      "ommand\022\n\n\002id\030\001 \002(\r\022\022\n\nkickspeedx\030\002 \002(\002\022\022" +
      "\n\nkickspeedz\030\003 \002(\002\022\022\n\nveltangent\030\004 \002(\002\022\021" +
      "\n\tvelnormal\030\005 \002(\002\022\022\n\nvelangular\030\006 \002(\002\022\017\n" +
      "\007spinner\030\007 \002(\010\022\023\n\013wheelsspeed\030\010 \002(\010\022\016\n\006w" +
      "heel1\030\t \001(\002\022\016\n\006wheel2\030\n \001(\002\022\016\n\006wheel3\030\013 " +
      "\001(\002\022\016\n\006wheel4\030\014 \001(\002\"g\n\016grSim_Commands\022\021\n" +
      "\ttimestamp\030\001 \002(\001\022\024\n\014isteamyellow\030\002 \002(\010\022," +
      "\n\016robot_commands\030\003 \003(\0132\024.grSim_Robot_Com" +
      "mand"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_grSim_Robot_Command_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_grSim_Robot_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_grSim_Robot_Command_descriptor,
              new java.lang.String[] { "Id", "Kickspeedx", "Kickspeedz", "Veltangent", "Velnormal", "Velangular", "Spinner", "Wheelsspeed", "Wheel1", "Wheel2", "Wheel3", "Wheel4", },
              GrSimCommands.grSim_Robot_Command.class,
              GrSimCommands.grSim_Robot_Command.Builder.class);
          internal_static_grSim_Commands_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_grSim_Commands_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_grSim_Commands_descriptor,
              new java.lang.String[] { "Timestamp", "Isteamyellow", "RobotCommands", },
              GrSimCommands.grSim_Commands.class,
              GrSimCommands.grSim_Commands.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
